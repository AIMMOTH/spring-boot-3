openapi: 3.0.3
info:
  title: Spring Boot 3 with Open API
  description: |-
    A simple Spring Boot 3 implementation with:
    - Open API (following https://www.baeldung.com/spring-boot-openapi-api-first-development)
    - Controller
    - Service
    - Autowired (dependency injection DI)
    - Properties (both properties and YAML/YML)
    - Static web files
  version: 1.0-SNAPSHOT
#  servers:
#    - url:http:/localhost:8084
#  tags:
#    - name: Implementation
#      description: Simple implementation

paths:
  /server-time:
    get:
      tags:
        - util
      summary: Get the server time
      operationId: getServerTime
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerTimeDto'

  /multiply:
    get:
      tags:
        - Maths
      summary: Multiplies parameter with property
      operationId: getParameterMultiplication
      parameters:
        - in: query
          name: value
          schema:
            type: integer
          description: The value to multiply with
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterMultiplicationDto'

  /immutable:
    post:
      tags:
        - Immutable
      summary: Creates a new immutable object
      operationId: postImmutable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostImmutableDto'
        description: A single object with a single value
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdDto'
    get:
      tags:
        - Immutable
      summary: Reads an immutable object
      operationId: getImmutable
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: Id of existing immutable object
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutableDto'

  /row:
    post:
      tags:
        - mariadb
      summary: Creates a row in MariaDB
      operationId: postRow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowValueDto'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowIdDto'
    get:
      tags:
        - mariadb
      summary: Reads a row in MariaDB
      operationId: getRow
      parameters:
        - in: query
          name: id
          description: Id of row
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowDto'

components:
  schemas:
    ServerTimeDto:
      properties:
        value:
          type: string

    ParameterMultiplicationDto:
      properties:
        value:
          type: integer

    PostImmutableDto:
      properties:
        value:
          type: integer
    IdDto:
      properties:
        id:
          type: string
    ImmutableDto:
      properties:
        id:
          type: string
        value:
          type: integer

    RowValueDto:
      properties:
        value:
          type: string
    RowIdDto:
      properties:
        id:
          type: integer
    RowDto:
      properties:
        id:
          type: integer
        value:
          type: string